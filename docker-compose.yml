version: '3.8'

services:
  btc-worker:
    build: btc
    image: fathomx/btc-worker
    container_name: btc-worker
    volumes:
      - btc-data:/root/.electrum  # Persistent data storage for the daemon
      - ./btc/api.py:/electrum/api.py  # Mount only the Flask app for live updates
    entrypoint: ["/electrum/entrypoint.sh"]  # Use the script
    ports:
      - "5000:5000"
    stdin_open: true
    tty: true
    depends_on:
      - tor  # Ensure Tor starts before btc-worker
    environment:
      TOR_PROXY_HOST: "tor"
      TOR_PROXY_PORT: 9050

  dashboard:
    build: dashboard
    image: fathomx/dashboard
    container_name: data-dashboard
    ports:
      - "8050:8050"
    volumes:
      - ./dashboard:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis

  collector:
    build: collector
    image: fathomx/data-collector
    container_name: data-collector
    environment:
      BTC_WORKER: http://btc-worker:5000
      STALE_THRESHOLD_SECONDS: 120 # 5 minutes
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
      - ./collector:/app
    depends_on:
      - redis
      - btc-worker
    entrypoint: ["/wait-for-it.sh", "btc-worker:5000", "--", "python", "collector.py"]

  redis:
    build: redis
    image: fathomx/redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: always  # Ensure Redis restarts on failure or reboot

  tor:
    image: dperson/torproxy  # Lightweight Tor proxy
    container_name: tor
    ports:
      - "9050:9050"  # Expose Tor's SOCKS proxy port
    restart: always
    command: "-p 9050"  # Run the SOCKS proxy on port 9050

volumes:
  btc-data:
  redis-data:



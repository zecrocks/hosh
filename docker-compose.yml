services:
  nats:
    image: nats:alpine
    ports:
      - "4222:4222"
      - "8222:8222"
    command: ["--http_port", "8222"]
    environment:
      - NATS_SERVER_NAME=hosh-nats
      - NATS_CLUSTER_NAME=hosh-cluster
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      start_period: 2s
      interval: 5s
      timeout: 3s
      retries: 5

  checker-btc:
    build: ./checkers/btc
    image: hosh/checker-btc
    environment:
      RUST_LOG: warning
      RUN_MODE: worker
      NATS_URL: "nats://nats:4222"
      NATS_SUBJECT: "hosh.check.btc"
      TOR_PROXY_HOST: tor
      TOR_PROXY_PORT: 9050
      CLICKHOUSE_HOST: chronicler
      CLICKHOUSE_PORT: 8123
      CLICKHOUSE_DB: ${CLICKHOUSE_DB}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
    depends_on:
      nats:
        condition: service_healthy
      tor:
        condition: service_healthy
      chronicler:
        condition: service_healthy

  checker-btc-user:
    build: ./checkers/btc
    image: hosh/checker-btc
    environment:
      RUST_LOG: warning
      RUN_MODE: worker
      MAX_CONCURRENT_CHECKS: 1
      NATS_URL: "nats://nats:4222"
      NATS_SUBJECT: "hosh.check.btc.user"
      TOR_PROXY_HOST: tor
      TOR_PROXY_PORT: 9050
      CLICKHOUSE_HOST: chronicler
      CLICKHOUSE_PORT: 8123
      CLICKHOUSE_DB: ${CLICKHOUSE_DB}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
    depends_on:
      nats:
        condition: service_healthy
      tor:
        condition: service_healthy
      chronicler:
        condition: service_healthy


  discovery:
    build: ./discovery
    image: hosh/discovery
    container_name: discovery
    environment:
      - RUST_LOG=${RUST_LOG:-warning}
      - DISCOVERY_INTERVAL=3600
      - CLICKHOUSE_HOST=chronicler
      - CLICKHOUSE_PORT=8123
      - CLICKHOUSE_DB=${CLICKHOUSE_DB}
      - CLICKHOUSE_USER=${CLICKHOUSE_USER}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
    depends_on:
      chronicler:
        condition: service_healthy
      # checker-btc: # TODO: Re-enable after implementing peer discovery
      #   condition: service_healthy


  publisher:
    build: 
      context: ./publisher
      dockerfile: Dockerfile
    image: hosh/publisher-rust
    container_name: publisher
    environment:
      - RUST_LOG=${RUST_LOG:-warning}
      - CHECK_INTERVAL=${CHECK_INTERVAL:-300}
      - NATS_URL=${NATS_URL:-nats://nats:4222}
      - NATS_PREFIX=${NATS_PREFIX:-hosh.}
      - CLICKHOUSE_HOST=chronicler
      - CLICKHOUSE_PORT=8123
      - CLICKHOUSE_DB=${CLICKHOUSE_DB}
      - CLICKHOUSE_USER=${CLICKHOUSE_USER}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
    depends_on:
      nats:
        condition: service_healthy
      chronicler:
        condition: service_healthy
      checker-btc:
        condition: service_started
      checker-zec:
        condition: service_started
      checker-http:
        condition: service_started

  checker-zec:
    build: checkers/zec
    image: hosh/checker-zec
    container_name: checker-zec
    environment:
      - RUST_LOG=warning
      - NATS_HOST=nats
      - NATS_PORT=4222
      - CLICKHOUSE_HOST=chronicler
      - CLICKHOUSE_PORT=8123
      - CLICKHOUSE_DB=${CLICKHOUSE_DB}
      - CLICKHOUSE_USER=${CLICKHOUSE_USER}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
    depends_on:
      nats:
        condition: service_healthy
      chronicler:
        condition: service_healthy

  checker-http:
    build:
      context: ./checkers/http
      dockerfile: Dockerfile
    image: hosh/checker-http
    environment:
      - RUST_LOG=warning
      - NATS_HOST=nats
      - TOR_PROXY_HOST=tor
      - CLICKHOUSE_HOST=chronicler
      - CLICKHOUSE_PORT=8123
      - CLICKHOUSE_DB=${CLICKHOUSE_DB}
      - CLICKHOUSE_USER=${CLICKHOUSE_USER}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
    depends_on:
      nats:
        condition: service_healthy
      tor:
        condition: service_healthy
      chronicler:
        condition: service_healthy


  tor:
    image: osminogin/tor-simple
    container_name: tor
    healthcheck:
      test: |
        CMD-SHELL
        curl --fail --socks5-hostname localhost:9050 -s https://check.torproject.org/ | grep -qm1 Congratulations
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    environment:
      - TOR_NewCircuitPeriod=300
      - TOR_MaxCircuitDirtiness=600
    ports:
      - "9050:9050"
    restart: on-failure:5
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
        window: 120s

  web:
    build: web
    image: hosh/web
    container_name: web
    ports:
      - "8080:8080"
    environment:
      - RUST_LOG=${RUST_LOG:-warn}
      - CLICKHOUSE_HOST=chronicler
      - CLICKHOUSE_PORT=8123
      - CLICKHOUSE_USER=${CLICKHOUSE_USER}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
      - CLICKHOUSE_DB=${CLICKHOUSE_DB}
      - RESULTS_WINDOW_DAYS=${RESULTS_WINDOW_DAYS:-30}
      - NATS_HOST=nats
      - NATS_PORT=4222
    depends_on:
      chronicler:
        condition: service_healthy
      nats:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080"]
      interval: 5s
      timeout: 3s
      retries: 5

  nostr-alert:
    build:
      context: ./contrib/nostr-alert
      dockerfile: prod.Dockerfile
    image: hosh/nostr-alert
    container_name: nostr-alert
    environment:
      - RUST_LOG=${RUST_LOG:-info}
      - ADMIN_PUB_KEY=${ADMIN_PUB_KEY}
      - HOSH_PRIV_KEY=${HOSH_PRIV_KEY}
      - ZEC_API_URL=${ZEC_API_URL:-http://web:8080/api/v0/zec.json}
      - BTC_API_URL=${BTC_API_URL:-http://web:8080/api/v0/btc.json}
      - CHECK_INTERVAL_SECONDS=${CHECK_INTERVAL_SECONDS:-300}
      - GENERATE_KEYS=${GENERATE_KEYS:-false}
    command: ["nostr-alert"]
    restart: unless-stopped
    depends_on:
      nats:
        condition: service_healthy

  chronicler:
    build: ./chronicler
    container_name: chronicler
    environment:
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
      - CLICKHOUSE_USER=${CLICKHOUSE_USER}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
      - CLICKHOUSE_DB=${CLICKHOUSE_DB}
    ports:
      - "8123:8123"  # HTTP interface
      - "9000:9000"  # Native interface
    volumes:
      - clickhouse-data:/var/lib/clickhouse
      # - ./chronicler/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8123/ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    ulimits:
      nofile:
        soft: 262144
        hard: 262144


volumes:
  clickhouse-data: